<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coderdojo on zephiransasのチラシの裏</title>
    <link>https://zephiransas.github.io/tags/coderdojo/</link>
    <description>Recent content in Coderdojo on zephiransasのチラシの裏</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 23 Dec 2017 10:54:24 +0200</lastBuildDate>
    
	<atom:link href="https://zephiransas.github.io/tags/coderdojo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CoderDojoでのMIND STORMの教え方</title>
      <link>https://zephiransas.github.io/post/mindstorm-in-coderdojo/</link>
      <pubDate>Sat, 23 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://zephiransas.github.io/post/mindstorm-in-coderdojo/</guid>
      <description>これはCoderDojoアドベントカレンダー23日目のエントリです。
自分はCoderDojo岡山岡南には第2回からずっと、メンターとして参加しています。
当初はScratchを教えるメンターをやっていたのですが、途中、運良く岡山岡南にマインドストームを寄贈してただけけることになったので、これ以降、マインドストーム担当のメンターをさせていただいています。
今日は、マインドストームのメンターをするにようになって得られた情報について、書いてみたいと思います。
パーツを揃えよう 今回寄贈していただいたレゴマインドストームは、もともとは展示や体験会で使われたもののようです。そのため、足りないパーツなどもあったりします。
基本になるセットは教育版レゴ マインドストーム EV3なので、これとパーツ構成を揃えたほうが後々楽そうだったので、足りなさそうなパーツを調べて、レゴの専門店で個別に注文しました。
自分が使ったのはブリッカーズというところです。こちらであれば、パーツを1つから販売してもらえるので、なくなったり足りないパーツを買うのに最適だと思います。
カリキュラムを考える 現在、岡山岡南では実際の作業時間が2時間あるので、前半の1時間で「ロボットの組み立て」後半の1時間で「ロボットを動かす」という時間配分でおこなっています。
ただこれには課題もあって、前半のロボットの組み立てが終わった段階で、一旦集中力が切れるニンジャもいて、このあたりをどうするのか？といったことは、今後の課題だと考えています。
ロボット本体を組み立てよう 次はロボット本体の組み立てです。
ですが、いきなりバラバラの状態からニンジャに「さぁ！ロボットを作りましょう！」といっても、おそらく困りますよね？
なので最初はレゴが提供している、ロボットの組み立て説明書を見ながら作るのがいいと思います。
 LEGO® MINDSTORMS® Education EV3 Building Instructions  上記ページは英語ですが、中身は絵のみですので、ニンジャたちでも簡単に作ることができると思います。
岡山岡南では、最初は基本になるDriving Baseをつくり、これに、ニンジャたちがやりたいことに応じてセンサーを取り付けたり、あるいは自分好みに改造したりする感じで進めています。
この他にも、Youtubeなどを探すとオリジナルのロボットの作り方をアップした動画などもありますので、こういったものを参考にロボットを作成していきます。
このとき、あとで「パーツが足りない！」みたいなことにならないよう、メンターの方は事前に一度作っておくといいと思います。
ロボットを動かそう 次はプログラミングで実際にロボットを動かします。
マインドストームを動作させるアプリはこちらからダウンロードできます。Scratchとよく似たブロックプログラミングのUIなので、Scratchを経験したことのあるニンジャであれば、簡単にスタートできると思います。
岡山岡南では、以下のようにいくつかプログラミングのネタを予め準備していて、それを当日ニンジャに選んでもらう形にしています。もちろんニンジャたちの希望があればそちらが優先で。
 床にコースを作って、これに沿って走るようパラメータを調整しながら動きをプログラミングする
 色センサーを使ってライントレースをする
  ライントレースやってみた。意外と簡単じゃーん pic.twitter.com/YHb59H5Mpn
&amp;mdash; Takafumi Yoshida (@zephiransas) 2017年10月21日 
床にコースを作るのには、適当なビニールテープを1つ用意しておき、これを床に貼ってコースを作る感じです。これなら後始末も簡単です。
 超音波センサーで、壁を検知して自動で方向転換する  壁を検知して自動で進むロボットを試す pic.twitter.com/OAgZeGtT9r
&amp;mdash; Takafumi Yoshida (@zephiransas) 2017年10月22日 
 タッチセンサーを2つ使って、リモコンで動かすようにする  大山に送る前にリモコン機能作ってみた。
（レゴロボット） pic.twitter.com/xg4yI4wZqI
&amp;mdash; ゆ～さん 💻 ☯️ 🇯🇵 (@yu_san_19) 2017年12月17日</description>
    </item>
    
  </channel>
</rss>